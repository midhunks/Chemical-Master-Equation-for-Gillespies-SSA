function State_Transition_Index_Matrix = State_Transition_Matrix_Finder(S,Stoichiometry)
global nstates number_reactions Conservation dim_cons Conservation_Sum
State_Transition_Index_Matrix = zeros(number_reactions,nstates);
for i = 1:number_reactions
    % Here the Logic is - What are the new states from the current state
    % due to different reactions. Another possible logic to code is -
    % From which all state the system can reach current state.
    B = bsxfun(@plus,S',Stoichiometry(:,i));
    C = abs(B)'*Conservation;
    %% ismember function is (very) slow. which affects the speed of algorithm
    %     [~,State_Transition_Index_Matrix(i,:)] = ismember(B',S,'rows');
    A = zeros(nstates,
    for j=1:dim_cons
        A(:,j) = C(:,j)==Conservation_Sum(j);
    end
    State_Transition_Index_Matrix(:,i)=(sum(A,2)==dim_cons);
    
end
State_Transition_Index_Matrix=double(State_Transition_Index_Matrix);
State_Transition_Index_Matrix(State_Transition_Index_Matrix==0)=nan;
State_Transition_Index_Matrix =[0:nstates-1]'+State_Transition_Index_Matrix;
end
